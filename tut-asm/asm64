
bomb64:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x1eb>
  400248:	78 38                	js     400282 <_init-0x1de>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 8e 90 93 aa c8    	add    %cl,-0x37556c70(%rsi)
  400289:	0e                   	(bad)  
  40028a:	a0 15 7c fd a7 77 16 	movabs 0xe2ba1677a7fd7c15,%al
  400291:	ba e2 
  400293:	30 51 c8             	xor    %dl,-0x38(%rcx)
  400296:	5a                   	pop    %rdx
  400297:	f3                   	repz

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	1a 00                	sbb    (%rax),%al
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	1f                   	(bad)  
  4002e9:	00 00                	add    %al,(%rax)
  4002eb:	00 12                	add    %dl,(%rdx)
	...
  4002fd:	00 00                	add    %al,(%rax)
  4002ff:	00 26                	add    %ah,(%rsi)
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 38                	add    %bh,(%rax)
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 20                	add    %ah,(%rax)
	...
  40032d:	00 00                	add    %al,(%rax)
  40032f:	00 0b                	add    %cl,(%rbx)
  400331:	00 00                	add    %al,(%rax)
  400333:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .dynstr:

0000000000400348 <.dynstr>:
  400348:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40034c:	63 2e                	movslq (%rsi),%ebp
  40034e:	73 6f                	jae    4003bf <_init-0xa1>
  400350:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
  400355:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  40035c:	73 63                	jae    4003c1 <_init-0x9f>
  40035e:	61                   	(bad)  
  40035f:	6e                   	outsb  %ds:(%rsi),(%dx)
  400360:	66 00 70 75          	data16 add %dh,0x75(%rax)
  400364:	74 73                	je     4003d9 <_init-0x87>
  400366:	00 70 72             	add    %dh,0x72(%rax)
  400369:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  400370:	6c                   	insb   (%dx),%es:(%rdi)
  400371:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400378:	72 74                	jb     4003ee <_init-0x72>
  40037a:	5f                   	pop    %rdi
  40037b:	6d                   	insl   (%dx),%es:(%rdi)
  40037c:	61                   	(bad)  
  40037d:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400384:	6f                   	outsl  %ds:(%rsi),(%dx)
  400385:	6e                   	outsb  %ds:(%rsi),(%dx)
  400386:	5f                   	pop    %rdi
  400387:	73 74                	jae    4003fd <_init-0x63>
  400389:	61                   	(bad)  
  40038a:	72 74                	jb     400400 <_init-0x60>
  40038c:	5f                   	pop    %rdi
  40038d:	5f                   	pop    %rdi
  40038e:	00 47 4c             	add    %al,0x4c(%rdi)
  400391:	49                   	rex.WB
  400392:	42                   	rex.X
  400393:	43 5f                	rex.XB pop %r15
  400395:	32 2e                	xor    (%rsi),%ch
  400397:	37                   	(bad)  
  400398:	00 47 4c             	add    %al,0x4c(%rdi)
  40039b:	49                   	rex.WB
  40039c:	42                   	rex.X
  40039d:	43 5f                	rex.XB pop %r15
  40039f:	32 2e                	xor    (%rsi),%ch
  4003a1:	32 2e                	xor    (%rsi),%ch
  4003a3:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003a6 <.gnu.version>:
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	02 00                	add    (%rax),%al
  4003aa:	02 00                	add    (%rax),%al
  4003ac:	02 00                	add    (%rax),%al
  4003ae:	00 00                	add    %al,(%rax)
  4003b0:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

00000000004003b8 <.gnu.version_r>:
  4003b8:	01 00                	add    %eax,(%rax)
  4003ba:	02 00                	add    (%rax),%al
  4003bc:	01 00                	add    %eax,(%rax)
  4003be:	00 00                	add    %al,(%rax)
  4003c0:	10 00                	adc    %al,(%rax)
  4003c2:	00 00                	add    %al,(%rax)
  4003c4:	00 00                	add    %al,(%rax)
  4003c6:	00 00                	add    %al,(%rax)
  4003c8:	17                   	(bad)  
  4003c9:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%rcx),%ebp
  4003d0:	47 00 00             	rex.RXB add %r8b,(%r8)
  4003d3:	00 10                	add    %dl,(%rax)
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 75 1a             	add    %dh,0x1a(%rbp)
  4003da:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003e0:	51                   	push   %rcx
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 00                	add    %al,(%rax)
  4003e5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003e8 <.rela.dyn>:
  4003e8:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  4003ec:	00 00                	add    %al,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	06                   	(bad)  
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 03                	add    %al,(%rbx)
	...
  4003fd:	00 00                	add    %al,(%rax)
  4003ff:	00 f8                	add    %bh,%al
  400401:	0f 60 00             	punpcklbw (%rax),%mm0
  400404:	00 00                	add    %al,(%rax)
  400406:	00 00                	add    %al,(%rax)
  400408:	06                   	(bad)  
  400409:	00 00                	add    %al,(%rax)
  40040b:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

0000000000400418 <.rela.plt>:
  400418:	18 10                	sbb    %dl,(%rax)
  40041a:	60                   	(bad)  
  40041b:	00 00                	add    %al,(%rax)
  40041d:	00 00                	add    %al,(%rax)
  40041f:	00 07                	add    %al,(%rdi)
  400421:	00 00                	add    %al,(%rax)
  400423:	00 01                	add    %al,(%rcx)
	...
  40042d:	00 00                	add    %al,(%rax)
  40042f:	00 20                	add    %ah,(%rax)
  400431:	10 60 00             	adc    %ah,0x0(%rax)
  400434:	00 00                	add    %al,(%rax)
  400436:	00 00                	add    %al,(%rax)
  400438:	07                   	(bad)  
  400439:	00 00                	add    %al,(%rax)
  40043b:	00 02                	add    %al,(%rdx)
	...
  400445:	00 00                	add    %al,(%rax)
  400447:	00 28                	add    %ch,(%rax)
  400449:	10 60 00             	adc    %ah,0x0(%rax)
  40044c:	00 00                	add    %al,(%rax)
  40044e:	00 00                	add    %al,(%rax)
  400450:	07                   	(bad)  
  400451:	00 00                	add    %al,(%rax)
  400453:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400459 <_init-0x7>
  400459:	00 00                	add    %al,(%rax)
  40045b:	00 00                	add    %al,(%rax)
  40045d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000400460 <_init>:
  400460:	48 83 ec 08          	sub    $0x8,%rsp
  400464:	48 8b 05 8d 0b 20 00 	mov    0x200b8d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d8>
  40046b:	48 85 c0             	test   %rax,%rax
  40046e:	74 02                	je     400472 <_init+0x12>
  400470:	ff d0                	callq  *%rax
  400472:	48 83 c4 08          	add    $0x8,%rsp
  400476:	c3                   	retq   

Disassembly of section .plt:

0000000000400480 <puts@plt-0x10>:
  400480:	ff 35 82 0b 20 00    	pushq  0x200b82(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400486:	ff 25 84 0b 20 00    	jmpq   *0x200b84(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40048c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400490 <puts@plt>:
  400490:	ff 25 82 0b 20 00    	jmpq   *0x200b82(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400496:	68 00 00 00 00       	pushq  $0x0
  40049b:	e9 e0 ff ff ff       	jmpq   400480 <_init+0x20>

00000000004004a0 <printf@plt>:
  4004a0:	ff 25 7a 0b 20 00    	jmpq   *0x200b7a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004a6:	68 01 00 00 00       	pushq  $0x1
  4004ab:	e9 d0 ff ff ff       	jmpq   400480 <_init+0x20>

00000000004004b0 <__isoc99_scanf@plt>:
  4004b0:	ff 25 72 0b 20 00    	jmpq   *0x200b72(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004b6:	68 02 00 00 00       	pushq  $0x2
  4004bb:	e9 c0 ff ff ff       	jmpq   400480 <_init+0x20>

Disassembly of section .text:

00000000004004c0 <_start>:
  4004c0:	31 ed                	xor    %ebp,%ebp
  4004c2:	49 89 d1             	mov    %rdx,%r9
  4004c5:	5e                   	pop    %rsi
  4004c6:	48 89 e2             	mov    %rsp,%rdx
  4004c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004cd:	50                   	push   %rax
  4004ce:	54                   	push   %rsp
  4004cf:	49 c7 c0 90 06 40 00 	mov    $0x400690,%r8
  4004d6:	48 c7 c1 20 06 40 00 	mov    $0x400620,%rcx
  4004dd:	48 c7 c7 b6 05 40 00 	mov    $0x4005b6,%rdi
  4004e4:	ff 15 06 0b 20 00    	callq  *0x200b06(%rip)        # 600ff0 <_DYNAMIC+0x1d0>
  4004ea:	f4                   	hlt    
  4004eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004004f0 <deregister_tm_clones>:
  4004f0:	b8 47 10 60 00       	mov    $0x601047,%eax
  4004f5:	55                   	push   %rbp
  4004f6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004fc:	48 83 f8 0e          	cmp    $0xe,%rax
  400500:	48 89 e5             	mov    %rsp,%rbp
  400503:	76 1b                	jbe    400520 <deregister_tm_clones+0x30>
  400505:	b8 00 00 00 00       	mov    $0x0,%eax
  40050a:	48 85 c0             	test   %rax,%rax
  40050d:	74 11                	je     400520 <deregister_tm_clones+0x30>
  40050f:	5d                   	pop    %rbp
  400510:	bf 40 10 60 00       	mov    $0x601040,%edi
  400515:	ff e0                	jmpq   *%rax
  400517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40051e:	00 00 
  400520:	5d                   	pop    %rbp
  400521:	c3                   	retq   
  400522:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  400529:	1f 84 00 00 00 00 00 

0000000000400530 <register_tm_clones>:
  400530:	be 40 10 60 00       	mov    $0x601040,%esi
  400535:	55                   	push   %rbp
  400536:	48 81 ee 40 10 60 00 	sub    $0x601040,%rsi
  40053d:	48 c1 fe 03          	sar    $0x3,%rsi
  400541:	48 89 e5             	mov    %rsp,%rbp
  400544:	48 89 f0             	mov    %rsi,%rax
  400547:	48 c1 e8 3f          	shr    $0x3f,%rax
  40054b:	48 01 c6             	add    %rax,%rsi
  40054e:	48 d1 fe             	sar    %rsi
  400551:	74 15                	je     400568 <register_tm_clones+0x38>
  400553:	b8 00 00 00 00       	mov    $0x0,%eax
  400558:	48 85 c0             	test   %rax,%rax
  40055b:	74 0b                	je     400568 <register_tm_clones+0x38>
  40055d:	5d                   	pop    %rbp
  40055e:	bf 40 10 60 00       	mov    $0x601040,%edi
  400563:	ff e0                	jmpq   *%rax
  400565:	0f 1f 00             	nopl   (%rax)
  400568:	5d                   	pop    %rbp
  400569:	c3                   	retq   
  40056a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400570 <__do_global_dtors_aux>:
  400570:	80 3d c9 0a 20 00 00 	cmpb   $0x0,0x200ac9(%rip)        # 601040 <__TMC_END__>
  400577:	75 11                	jne    40058a <__do_global_dtors_aux+0x1a>
  400579:	55                   	push   %rbp
  40057a:	48 89 e5             	mov    %rsp,%rbp
  40057d:	e8 6e ff ff ff       	callq  4004f0 <deregister_tm_clones>
  400582:	5d                   	pop    %rbp
  400583:	c6 05 b6 0a 20 00 01 	movb   $0x1,0x200ab6(%rip)        # 601040 <__TMC_END__>
  40058a:	f3 c3                	repz retq 
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400590 <frame_dummy>:
  400590:	bf 18 0e 60 00       	mov    $0x600e18,%edi
  400595:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400599:	75 05                	jne    4005a0 <frame_dummy+0x10>
  40059b:	eb 93                	jmp    400530 <register_tm_clones>
  40059d:	0f 1f 00             	nopl   (%rax)
  4005a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a5:	48 85 c0             	test   %rax,%rax
  4005a8:	74 f1                	je     40059b <frame_dummy+0xb>
  4005aa:	55                   	push   %rbp
  4005ab:	48 89 e5             	mov    %rsp,%rbp
  4005ae:	ff d0                	callq  *%rax
  4005b0:	5d                   	pop    %rbp
  4005b1:	e9 7a ff ff ff       	jmpq   400530 <register_tm_clones>

00000000004005b6 <main>:
  4005b6:	55                   	push   %rbp
  4005b7:	48 89 e5             	mov    %rsp,%rbp
  4005ba:	48 83 ec 10          	sub    $0x10,%rsp
  4005be:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4005c5:	bf a4 06 40 00       	mov    $0x4006a4,%edi
  4005ca:	b8 00 00 00 00       	mov    $0x0,%eax
  4005cf:	e8 cc fe ff ff       	callq  4004a0 <printf@plt>
  4005d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4005d8:	48 89 c6             	mov    %rax,%rsi
  4005db:	bf b4 06 40 00       	mov    $0x4006b4,%edi
  4005e0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005e5:	e8 c6 fe ff ff       	callq  4004b0 <__isoc99_scanf@plt>
  4005ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4005ed:	83 c0 08             	add    $0x8,%eax
  4005f0:	c1 e0 02             	shl    $0x2,%eax
  4005f3:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4005f6:	83 7d fc 58          	cmpl   $0x58,-0x4(%rbp)
  4005fa:	75 0c                	jne    400608 <main+0x52>
  4005fc:	bf b7 06 40 00       	mov    $0x4006b7,%edi
  400601:	e8 8a fe ff ff       	callq  400490 <puts@plt>
  400606:	eb 0a                	jmp    400612 <main+0x5c>
  400608:	bf c0 06 40 00       	mov    $0x4006c0,%edi
  40060d:	e8 7e fe ff ff       	callq  400490 <puts@plt>
  400612:	b8 00 00 00 00       	mov    $0x0,%eax
  400617:	c9                   	leaveq 
  400618:	c3                   	retq   
  400619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400620 <__libc_csu_init>:
  400620:	41 57                	push   %r15
  400622:	41 56                	push   %r14
  400624:	41 89 ff             	mov    %edi,%r15d
  400627:	41 55                	push   %r13
  400629:	41 54                	push   %r12
  40062b:	4c 8d 25 d6 07 20 00 	lea    0x2007d6(%rip),%r12        # 600e08 <__frame_dummy_init_array_entry>
  400632:	55                   	push   %rbp
  400633:	48 8d 2d d6 07 20 00 	lea    0x2007d6(%rip),%rbp        # 600e10 <__init_array_end>
  40063a:	53                   	push   %rbx
  40063b:	49 89 f6             	mov    %rsi,%r14
  40063e:	49 89 d5             	mov    %rdx,%r13
  400641:	4c 29 e5             	sub    %r12,%rbp
  400644:	48 83 ec 08          	sub    $0x8,%rsp
  400648:	48 c1 fd 03          	sar    $0x3,%rbp
  40064c:	e8 0f fe ff ff       	callq  400460 <_init>
  400651:	48 85 ed             	test   %rbp,%rbp
  400654:	74 20                	je     400676 <__libc_csu_init+0x56>
  400656:	31 db                	xor    %ebx,%ebx
  400658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40065f:	00 
  400660:	4c 89 ea             	mov    %r13,%rdx
  400663:	4c 89 f6             	mov    %r14,%rsi
  400666:	44 89 ff             	mov    %r15d,%edi
  400669:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40066d:	48 83 c3 01          	add    $0x1,%rbx
  400671:	48 39 dd             	cmp    %rbx,%rbp
  400674:	75 ea                	jne    400660 <__libc_csu_init+0x40>
  400676:	48 83 c4 08          	add    $0x8,%rsp
  40067a:	5b                   	pop    %rbx
  40067b:	5d                   	pop    %rbp
  40067c:	41 5c                	pop    %r12
  40067e:	41 5d                	pop    %r13
  400680:	41 5e                	pop    %r14
  400682:	41 5f                	pop    %r15
  400684:	c3                   	retq   
  400685:	90                   	nop
  400686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40068d:	00 00 00 

0000000000400690 <__libc_csu_fini>:
  400690:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400694 <_fini>:
  400694:	48 83 ec 08          	sub    $0x8,%rsp
  400698:	48 83 c4 08          	add    $0x8,%rsp
  40069c:	c3                   	retq   

Disassembly of section .rodata:

00000000004006a0 <_IO_stdin_used>:
  4006a0:	01 00                	add    %eax,(%rax)
  4006a2:	02 00                	add    (%rax),%al
  4006a4:	69 6e 70 75 74 20 70 	imul   $0x70207475,0x70(%rsi),%ebp
  4006ab:	61                   	(bad)  
  4006ac:	73 73                	jae    400721 <__GNU_EH_FRAME_HDR+0x55>
  4006ae:	77 6f                	ja     40071f <__GNU_EH_FRAME_HDR+0x53>
  4006b0:	72 64                	jb     400716 <__GNU_EH_FRAME_HDR+0x4a>
  4006b2:	3a 00                	cmp    (%rax),%al
  4006b4:	25 64 00 73 75       	and    $0x75730064,%eax
  4006b9:	72 76                	jb     400731 <__GNU_EH_FRAME_HDR+0x65>
  4006bb:	69 76 65 21 00 62 6f 	imul   $0x6f620021,0x65(%rsi),%esi
  4006c2:	6d                   	insl   (%dx),%es:(%rdi)
  4006c3:	62 21 2e 2e 2e       	(bad)  {%k6}
	...

Disassembly of section .eh_frame_hdr:

00000000004006cc <__GNU_EH_FRAME_HDR>:
  4006cc:	01 1b                	add    %ebx,(%rbx)
  4006ce:	03 3b                	add    (%rbx),%edi
  4006d0:	30 00                	xor    %al,(%rax)
  4006d2:	00 00                	add    %al,(%rax)
  4006d4:	05 00 00 00 b4       	add    $0xb4000000,%eax
  4006d9:	fd                   	std    
  4006da:	ff                   	(bad)  
  4006db:	ff                   	(bad)  
  4006dc:	7c 00                	jl     4006de <__GNU_EH_FRAME_HDR+0x12>
  4006de:	00 00                	add    %al,(%rax)
  4006e0:	f4                   	hlt    
  4006e1:	fd                   	std    
  4006e2:	ff                   	(bad)  
  4006e3:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
  4006e7:	00 ea                	add    %ch,%dl
  4006e9:	fe                   	(bad)  
  4006ea:	ff                   	(bad)  
  4006eb:	ff a4 00 00 00 54 ff 	jmpq   *-0xac0000(%rax,%rax,1)
  4006f2:	ff                   	(bad)  
  4006f3:	ff c4                	inc    %esp
  4006f5:	00 00                	add    %al,(%rax)
  4006f7:	00 c4                	add    %al,%ah
  4006f9:	ff                   	(bad)  
  4006fa:	ff                   	(bad)  
  4006fb:	ff 0c 01             	decl   (%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400700 <__FRAME_END__-0xf0>:
  400700:	14 00                	adc    $0x0,%al
  400702:	00 00                	add    %al,(%rax)
  400704:	00 00                	add    %al,(%rax)
  400706:	00 00                	add    %al,(%rax)
  400708:	01 7a 52             	add    %edi,0x52(%rdx)
  40070b:	00 01                	add    %al,(%rcx)
  40070d:	78 10                	js     40071f <__GNU_EH_FRAME_HDR+0x53>
  40070f:	01 1b                	add    %ebx,(%rbx)
  400711:	0c 07                	or     $0x7,%al
  400713:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400719:	00 00                	add    %al,(%rax)
  40071b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40071e:	00 00                	add    %al,(%rax)
  400720:	a0 fd ff ff 2b 00 00 	movabs 0x2bfffffd,%al
  400727:	00 00 
  400729:	00 00                	add    %al,(%rax)
  40072b:	00 00                	add    %al,(%rax)
  40072d:	00 00                	add    %al,(%rax)
  40072f:	00 14 00             	add    %dl,(%rax,%rax,1)
  400732:	00 00                	add    %al,(%rax)
  400734:	00 00                	add    %al,(%rax)
  400736:	00 00                	add    %al,(%rax)
  400738:	01 7a 52             	add    %edi,0x52(%rdx)
  40073b:	00 01                	add    %al,(%rcx)
  40073d:	78 10                	js     40074f <__GNU_EH_FRAME_HDR+0x83>
  40073f:	01 1b                	add    %ebx,(%rbx)
  400741:	0c 07                	or     $0x7,%al
  400743:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400749:	00 00                	add    %al,(%rax)
  40074b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40074e:	00 00                	add    %al,(%rax)
  400750:	30 fd                	xor    %bh,%ch
  400752:	ff                   	(bad)  
  400753:	ff 40 00             	incl   0x0(%rax)
  400756:	00 00                	add    %al,(%rax)
  400758:	00 0e                	add    %cl,(%rsi)
  40075a:	10 46 0e             	adc    %al,0xe(%rsi)
  40075d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400760:	0b 77 08             	or     0x8(%rdi),%esi
  400763:	80 00 3f             	addb   $0x3f,(%rax)
  400766:	1a 3b                	sbb    (%rbx),%bh
  400768:	2a 33                	sub    (%rbx),%dh
  40076a:	24 22                	and    $0x22,%al
  40076c:	00 00                	add    %al,(%rax)
  40076e:	00 00                	add    %al,(%rax)
  400770:	1c 00                	sbb    $0x0,%al
  400772:	00 00                	add    %al,(%rax)
  400774:	44 00 00             	add    %r8b,(%rax)
  400777:	00 3e                	add    %bh,(%rsi)
  400779:	fe                   	(bad)  
  40077a:	ff                   	(bad)  
  40077b:	ff 63 00             	jmpq   *0x0(%rbx)
  40077e:	00 00                	add    %al,(%rax)
  400780:	00 41 0e             	add    %al,0xe(%rcx)
  400783:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400789:	02 5e 0c             	add    0xc(%rsi),%bl
  40078c:	07                   	(bad)  
  40078d:	08 00                	or     %al,(%rax)
  40078f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  400793:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  400797:	00 88 fe ff ff 65    	add    %cl,0x65fffffe(%rax)
  40079d:	00 00                	add    %al,(%rax)
  40079f:	00 00                	add    %al,(%rax)
  4007a1:	42 0e                	rex.X (bad) 
  4007a3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  4007a9:	8e 03                	mov    (%rbx),%es
  4007ab:	45 0e                	rex.RB (bad) 
  4007ad:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4007b3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701601 <_end+0xffffffff861005b9>
  4007b9:	06                   	(bad)  
  4007ba:	48 0e                	rex.W (bad) 
  4007bc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4007c2:	72 0e                	jb     4007d2 <__GNU_EH_FRAME_HDR+0x106>
  4007c4:	38 41 0e             	cmp    %al,0xe(%rcx)
  4007c7:	30 41 0e             	xor    %al,0xe(%rcx)
  4007ca:	28 42 0e             	sub    %al,0xe(%rdx)
  4007cd:	20 42 0e             	and    %al,0xe(%rdx)
  4007d0:	18 42 0e             	sbb    %al,0xe(%rdx)
  4007d3:	10 42 0e             	adc    %al,0xe(%rdx)
  4007d6:	08 00                	or     %al,(%rax)
  4007d8:	14 00                	adc    $0x0,%al
  4007da:	00 00                	add    %al,(%rax)
  4007dc:	ac                   	lods   %ds:(%rsi),%al
  4007dd:	00 00                	add    %al,(%rax)
  4007df:	00 b0 fe ff ff 02    	add    %dh,0x2fffffe(%rax)
	...

00000000004007f0 <__FRAME_END__>:
  4007f0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e08 <__frame_dummy_init_array_entry>:
  600e08:	90                   	nop
  600e09:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .fini_array:

0000000000600e10 <__do_global_dtors_aux_fini_array_entry>:
  600e10:	70 05                	jo     600e17 <__do_global_dtors_aux_fini_array_entry+0x7>
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e18 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	60                   	(bad)  
  600e39:	04 40                	add    $0x40,%al
  600e3b:	00 00                	add    %al,(%rax)
  600e3d:	00 00                	add    %al,(%rax)
  600e3f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e45 <_DYNAMIC+0x25>
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 94 06 40 00 00 00 	add    %dl,0x40(%rsi,%rax,1)
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	19 00                	sbb    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	08 0e                	or     %cl,(%rsi)
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 10                	add    %dl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 48 03             	add    %cl,0x3(%rax)
  600eaa:	40 00 00             	add    %al,(%rax)
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 06                	add    %al,(%rsi)
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 5d 00             	add    %bl,0x0(%rbp)
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	0b 00                	or     (%rax),%eax
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	18 00                	sbb    %al,(%rax)
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	48 00 00             	rex.W add %al,(%rax)
  600f0b:	00 00                	add    %al,(%rax)
  600f0d:	00 00                	add    %al,(%rax)
  600f0f:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 18                	add    %bl,(%rax)
  600f29:	04 40                	add    $0x40,%al
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 e8                	add    %ch,%al
  600f39:	03 40 00             	add    0x0(%rax),%eax
  600f3c:	00 00                	add    %al,(%rax)
  600f3e:	00 00                	add    %al,(%rax)
  600f40:	08 00                	or     %al,(%rax)
  600f42:	00 00                	add    %al,(%rax)
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	30 00                	xor    %al,(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	09 00                	or     %eax,(%rax)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	18 00                	sbb    %al,(%rax)
  600f5a:	00 00                	add    %al,(%rax)
  600f5c:	00 00                	add    %al,(%rax)
  600f5e:	00 00                	add    %al,(%rax)
  600f60:	fe                   	(bad)  
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 b8 03 40 00 00    	add    %bh,0x4003(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 a6 03 40 00 00    	add    %ah,0x4003(%rsi)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 96 04 40 00 00    	add    %dl,0x4004(%rsi)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 a6 04 40 00 00    	add    %ah,0x4004(%rsi)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 b6 04 40 00 00    	add    %dh,0x4004(%rsi)
  60102d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601030 <__data_start>:
	...

0000000000601038 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601040 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 34 2e 39 	imul   $0x392e3420,0x6e(%rcx),%esp
  10:	2e 32 2d 31 30 29 20 	xor    %cs:0x20293031(%rip),%ch        # 20293048 <_end+0x1fc92000>
  17:	34 2e                	xor    $0x2e,%al
  19:	39 2e                	cmp    %ebp,(%rsi)
  1b:	32 00                	xor    (%rax),%al
